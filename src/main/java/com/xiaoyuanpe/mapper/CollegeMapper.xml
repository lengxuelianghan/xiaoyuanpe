<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xiaoyuanpe.mapper.CollegeMapper">
  <resultMap id="BaseResultMap" type="com.xiaoyuanpe.pojo.College">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="shcool_id" jdbcType="INTEGER" property="shcoolId" />
    <result column="college_name" jdbcType="VARCHAR" property="collegeName" />
    <result column="score" jdbcType="INTEGER" property="score" />
    <result column="college_info" jdbcType="VARCHAR" property="collegeInfo" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, shcool_id, college_name, score, college_info
  </sql>
  <select id="selectByExample" parameterType="com.xiaoyuanpe.pojo.CollegeExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from college
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from college
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from college
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.xiaoyuanpe.pojo.CollegeExample">
    delete from college
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.xiaoyuanpe.pojo.College">
    insert into college (id, shcool_id, college_name, 
      score, college_info)
    values (#{id,jdbcType=INTEGER}, #{shcoolId,jdbcType=INTEGER}, #{collegeName,jdbcType=VARCHAR}, 
      #{score,jdbcType=INTEGER}, #{collegeInfo,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.xiaoyuanpe.pojo.College">
    insert into college
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="shcoolId != null">
        shcool_id,
      </if>
      <if test="collegeName != null">
        college_name,
      </if>
      <if test="score != null">
        score,
      </if>
      <if test="collegeInfo != null">
        college_info,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="shcoolId != null">
        #{shcoolId,jdbcType=INTEGER},
      </if>
      <if test="collegeName != null">
        #{collegeName,jdbcType=VARCHAR},
      </if>
      <if test="score != null">
        #{score,jdbcType=INTEGER},
      </if>
      <if test="collegeInfo != null">
        #{collegeInfo,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xiaoyuanpe.pojo.CollegeExample" resultType="java.lang.Long">
    select count(*) from college
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update college
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.shcoolId != null">
        shcool_id = #{record.shcoolId,jdbcType=INTEGER},
      </if>
      <if test="record.collegeName != null">
        college_name = #{record.collegeName,jdbcType=VARCHAR},
      </if>
      <if test="record.score != null">
        score = #{record.score,jdbcType=INTEGER},
      </if>
      <if test="record.collegeInfo != null">
        college_info = #{record.collegeInfo,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update college
    set id = #{record.id,jdbcType=INTEGER},
      shcool_id = #{record.shcoolId,jdbcType=INTEGER},
      college_name = #{record.collegeName,jdbcType=VARCHAR},
      score = #{record.score,jdbcType=INTEGER},
      college_info = #{record.collegeInfo,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.xiaoyuanpe.pojo.College">
    update college
    <set>
      <if test="shcoolId != null">
        shcool_id = #{shcoolId,jdbcType=INTEGER},
      </if>
      <if test="collegeName != null">
        college_name = #{collegeName,jdbcType=VARCHAR},
      </if>
      <if test="score != null">
        score = #{score,jdbcType=INTEGER},
      </if>
      <if test="collegeInfo != null">
        college_info = #{collegeInfo,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xiaoyuanpe.pojo.College">
    update college
    set shcool_id = #{shcoolId,jdbcType=INTEGER},
      college_name = #{collegeName,jdbcType=VARCHAR},
      score = #{score,jdbcType=INTEGER},
      college_info = #{collegeInfo,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <delete id="deleteByPrimaryKeys" parameterType="java.util.List">
    delete from college
    where id in
    <foreach collection="list" item="item" index="index" open="(" separator="," close=")">
      #{item}
    </foreach>
  </delete>

</mapper>
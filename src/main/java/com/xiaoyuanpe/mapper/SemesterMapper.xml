<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xiaoyuanpe.mapper.SemesterMapper">
  <resultMap id="BaseResultMap" type="com.xiaoyuanpe.pojo.Semester">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="school_id" jdbcType="INTEGER" property="schoolId" />
    <result column="college_id" jdbcType="INTEGER" property="collegeId" />
    <result column="classes_id" jdbcType="INTEGER" property="classesId" />
    <result column="term" jdbcType="INTEGER" property="term" />
    <result column="score" jdbcType="INTEGER" property="score" />
    <result column="exercise_time" jdbcType="INTEGER" property="exerciseTime" />
    <result column="sudent_id" jdbcType="INTEGER" property="sudentId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, school_id, college_id, classes_id, term, score, exercise_time, sudent_id
  </sql>
  <select id="selectByExample" parameterType="com.xiaoyuanpe.pojo.SemesterExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from semester
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from semester
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from semester
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.xiaoyuanpe.pojo.SemesterExample">
    delete from semester
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.xiaoyuanpe.pojo.Semester">
    insert into semester (id, school_id, college_id, 
      classes_id, term, score, 
      exercise_time, sudent_id)
    values (#{id,jdbcType=INTEGER}, #{schoolId,jdbcType=INTEGER}, #{collegeId,jdbcType=INTEGER}, 
      #{classesId,jdbcType=INTEGER}, #{term,jdbcType=INTEGER}, #{score,jdbcType=INTEGER}, 
      #{exerciseTime,jdbcType=INTEGER}, #{sudentId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.xiaoyuanpe.pojo.Semester">
    insert into semester
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="schoolId != null">
        school_id,
      </if>
      <if test="collegeId != null">
        college_id,
      </if>
      <if test="classesId != null">
        classes_id,
      </if>
      <if test="term != null">
        term,
      </if>
      <if test="score != null">
        score,
      </if>
      <if test="exerciseTime != null">
        exercise_time,
      </if>
      <if test="sudentId != null">
        sudent_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="schoolId != null">
        #{schoolId,jdbcType=INTEGER},
      </if>
      <if test="collegeId != null">
        #{collegeId,jdbcType=INTEGER},
      </if>
      <if test="classesId != null">
        #{classesId,jdbcType=INTEGER},
      </if>
      <if test="term != null">
        #{term,jdbcType=INTEGER},
      </if>
      <if test="score != null">
        #{score,jdbcType=INTEGER},
      </if>
      <if test="exerciseTime != null">
        #{exerciseTime,jdbcType=INTEGER},
      </if>
      <if test="sudentId != null">
        #{sudentId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xiaoyuanpe.pojo.SemesterExample" resultType="java.lang.Long">
    select count(*) from semester
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update semester
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.schoolId != null">
        school_id = #{record.schoolId,jdbcType=INTEGER},
      </if>
      <if test="record.collegeId != null">
        college_id = #{record.collegeId,jdbcType=INTEGER},
      </if>
      <if test="record.classesId != null">
        classes_id = #{record.classesId,jdbcType=INTEGER},
      </if>
      <if test="record.term != null">
        term = #{record.term,jdbcType=INTEGER},
      </if>
      <if test="record.score != null">
        score = #{record.score,jdbcType=INTEGER},
      </if>
      <if test="record.exerciseTime != null">
        exercise_time = #{record.exerciseTime,jdbcType=INTEGER},
      </if>
      <if test="record.sudentId != null">
        sudent_id = #{record.sudentId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update semester
    set id = #{record.id,jdbcType=INTEGER},
      school_id = #{record.schoolId,jdbcType=INTEGER},
      college_id = #{record.collegeId,jdbcType=INTEGER},
      classes_id = #{record.classesId,jdbcType=INTEGER},
      term = #{record.term,jdbcType=INTEGER},
      score = #{record.score,jdbcType=INTEGER},
      exercise_time = #{record.exerciseTime,jdbcType=INTEGER},
      sudent_id = #{record.sudentId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.xiaoyuanpe.pojo.Semester">
    update semester
    <set>
      <if test="schoolId != null">
        school_id = #{schoolId,jdbcType=INTEGER},
      </if>
      <if test="collegeId != null">
        college_id = #{collegeId,jdbcType=INTEGER},
      </if>
      <if test="classesId != null">
        classes_id = #{classesId,jdbcType=INTEGER},
      </if>
      <if test="term != null">
        term = #{term,jdbcType=INTEGER},
      </if>
      <if test="score != null">
        score = #{score,jdbcType=INTEGER},
      </if>
      <if test="exerciseTime != null">
        exercise_time = #{exerciseTime,jdbcType=INTEGER},
      </if>
      <if test="sudentId != null">
        sudent_id = #{sudentId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xiaoyuanpe.pojo.Semester">
    update semester
    set school_id = #{schoolId,jdbcType=INTEGER},
      college_id = #{collegeId,jdbcType=INTEGER},
      classes_id = #{classesId,jdbcType=INTEGER},
      term = #{term,jdbcType=INTEGER},
      score = #{score,jdbcType=INTEGER},
      exercise_time = #{exerciseTime,jdbcType=INTEGER},
      sudent_id = #{sudentId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="selectByPrimaryKeys" resultMap="BaseResultMap">
    select *
    from semester
    where school_id = #{schoolId,jdbcType=INTEGER} and college_id = #{collegeId,jdbcType=INTEGER} and classId = #{classId,jdbcType=INTEGER} and sudent_id = #{studentId,jdbcType=INTEGER} and term = #{term,jdbcType=INTEGER}
  </select>

  <select id="selectByPrimaryStudent" resultMap="BaseResultMap">
    select *
    from semester
    where school_id = #{schoolId,jdbcType=INTEGER} and college_id = #{collegeId,jdbcType=INTEGER} and classId = #{classId,jdbcType=INTEGER} and sudent_id = #{studentId,jdbcType=INTEGER}
  </select>

  <select id="selectByPrimaryClasses" resultMap="BaseResultMap">
    select *
    from semester
    where school_id = #{schoolId,jdbcType=INTEGER} and college_id = #{collegeId,jdbcType=INTEGER} and classId = #{classId,jdbcType=INTEGER} and term = #{term,jdbcType=INTEGER}
  </select>

  <select id="selectByPrimaryCollege" resultMap="BaseResultMap">
    select *
    from semester
    where school_id = #{schoolId,jdbcType=INTEGER} and college_id = #{collegeId,jdbcType=INTEGER} and term = #{term,jdbcType=INTEGER}
  </select>

  <select id="selectByPrimarySchool" resultMap="BaseResultMap">
    select *
    from semester
    where school_id = #{schoolId,jdbcType=INTEGER} and term = #{term,jdbcType=INTEGER}
  </select>

</mapper>
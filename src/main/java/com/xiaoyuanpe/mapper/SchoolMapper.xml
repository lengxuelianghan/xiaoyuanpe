<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xiaoyuanpe.mapper.SchoolMapper">
  <resultMap id="BaseResultMap" type="com.xiaoyuanpe.pojo.School">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="school_name" jdbcType="VARCHAR" property="schoolName" />
    <result column="school_address" jdbcType="VARCHAR" property="schoolAddress" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="school_zip_code" jdbcType="VARCHAR" property="schoolZipCode" />
    <result column="school_number" jdbcType="VARCHAR" property="schoolNumber" />
    <result column="valid_period" jdbcType="VARCHAR" property="validPeriod" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.xiaoyuanpe.pojo.School">
    <result column="school_introduction" jdbcType="LONGVARCHAR" property="schoolIntroduction" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, school_name, school_address, phone, school_zip_code,school_number
  </sql>
  <sql id="Blob_Column_List">
    school_introduction
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.xiaoyuanpe.pojo.SchoolExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from school
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.xiaoyuanpe.pojo.SchoolExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from school
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from school
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from school
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.xiaoyuanpe.pojo.SchoolExample">
    delete from school
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.xiaoyuanpe.pojo.School">
    insert into school (id, school_name, school_address, 
      phone, school_zip_code, school_introduction,school_number,valid_period
      )
    values (#{id,jdbcType=INTEGER}, #{schoolName,jdbcType=VARCHAR}, #{schoolAddress,jdbcType=VARCHAR}, 
      #{phone,jdbcType=VARCHAR}, #{schoolZipCode,jdbcType=VARCHAR}, #{schoolIntroduction,jdbcType=LONGVARCHAR}
      ,#{schoolNumber,jdbcType=VARCHAR}, #{validPeriod,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.xiaoyuanpe.pojo.School">
    insert into school
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="schoolName != null">
        school_name,
      </if>
      <if test="schoolAddress != null">
        school_address,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="schoolZipCode != null">
        school_zip_code,
      </if>
      <if test="schoolIntroduction != null">
        school_introduction,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="schoolName != null">
        #{schoolName,jdbcType=VARCHAR},
      </if>
      <if test="schoolAddress != null">
        #{schoolAddress,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="schoolZipCode != null">
        #{schoolZipCode,jdbcType=VARCHAR},
      </if>
      <if test="schoolIntroduction != null">
        #{schoolIntroduction,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xiaoyuanpe.pojo.SchoolExample" resultType="java.lang.Long">
    select count(*) from school
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update school
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.schoolName != null">
        school_name = #{record.schoolName,jdbcType=VARCHAR},
      </if>
      <if test="record.schoolAddress != null">
        school_address = #{record.schoolAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null">
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.schoolZipCode != null">
        school_zip_code = #{record.schoolZipCode,jdbcType=VARCHAR},
      </if>
      <if test="record.schoolIntroduction != null">
        school_introduction = #{record.schoolIntroduction,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update school
    set id = #{record.id,jdbcType=INTEGER},
      school_name = #{record.schoolName,jdbcType=VARCHAR},
      school_address = #{record.schoolAddress,jdbcType=VARCHAR},
      phone = #{record.phone,jdbcType=VARCHAR},
      school_zip_code = #{record.schoolZipCode,jdbcType=VARCHAR},
      school_introduction = #{record.schoolIntroduction,jdbcType=LONGVARCHAR},
      school_number = #{record.schoolNumber,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update school
    set id = #{record.id,jdbcType=INTEGER},
      school_name = #{record.schoolName,jdbcType=VARCHAR},
      school_address = #{record.schoolAddress,jdbcType=VARCHAR},
      phone = #{record.phone,jdbcType=VARCHAR},
      school_zip_code = #{record.schoolZipCode,jdbcType=VARCHAR},
      school_introduction = #{record.schoolIntroduction,jdbcType=LONGVARCHAR},
      school_number = #{record.schoolNumber,jdbcType=VARCHAR},
      validPeriod = #{record.validPeriod,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.xiaoyuanpe.pojo.School">
    update school
    <set>
      <if test="schoolName != null">
        school_name = #{schoolName,jdbcType=VARCHAR},
      </if>
      <if test="schoolAddress != null">
        school_address = #{schoolAddress,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="schoolZipCode != null">
        school_zip_code = #{schoolZipCode,jdbcType=VARCHAR},
      </if>
      <if test="schoolIntroduction != null">
        school_introduction = #{schoolIntroduction,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.xiaoyuanpe.pojo.School">
    update school
    set school_name = #{schoolName,jdbcType=VARCHAR},
      school_address = #{schoolAddress,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      school_zip_code = #{schoolZipCode,jdbcType=VARCHAR},
      school_introduction = #{schoolIntroduction,jdbcType=LONGVARCHAR},
      school_number = #{schoolNumber,jdbcType=VARCHAR},
      validPeriod = #{validPeriod,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xiaoyuanpe.pojo.School">
    update school
    set school_name = #{schoolName,jdbcType=VARCHAR},
      school_address = #{schoolAddress,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      school_zip_code = #{schoolZipCode,jdbcType=VARCHAR},
      school_introduction = #{schoolIntroduction,jdbcType=LONGVARCHAR},
      school_number = #{schoolNumber,jdbcType=VARCHAR},
      validPeriod = #{validPeriod,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <delete id="deleteByPrimaryKeys" parameterType="java.util.List">
    delete from school
    where id in
    <foreach collection="list" item="item" index="index" open="(" separator="," close=")">
      #{item}
    </foreach>
  </delete>
</mapper>
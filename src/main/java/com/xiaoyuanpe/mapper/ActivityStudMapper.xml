<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xiaoyuanpe.mapper.ActivityStudMapper">
  <resultMap id="BaseResultMap" type="com.xiaoyuanpe.pojo.ActivityStud">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="activity_id" jdbcType="INTEGER" property="activityId" />
    <result column="student_id" jdbcType="INTEGER" property="studentId" />
    <result column="characters" jdbcType="VARCHAR" property="characters" />
  </resultMap>

  <resultMap id="BaseResultMapEntry" type="com.xiaoyuanpe.pojo.ActivityStudEntry">
    <id column="id" jdbcType="INTEGER" property="id" /> <!--signinId-->
    <result column="activity_id" jdbcType="VARCHAR" property="activityId" />
    <result column="student_id" jdbcType="VARCHAR" property="studentId" />
    <result column="characters" jdbcType="VARCHAR" property="characters" />
    <result column="student_number" jdbcType="VARCHAR" property="StudentNumber" />
    <result column="sign_status" jdbcType="INTEGER" property="SignStatus" />
    <result column="student_id_num" jdbcType="INTEGER" property="studentIDNum" />
    <result column="sign_id" jdbcType="INTEGER" property="signId" />
    <result column="status" jdbcType="INTEGER" property="status" />
  </resultMap>

  <resultMap id="BaseResultMapEntry1" type="com.xiaoyuanpe.pojo.ActivityEntry">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="activity_name" jdbcType="VARCHAR" property="activityName" />
    <result column="activity_content" jdbcType="VARCHAR" property="activityContent" />
    <result column="image_path" jdbcType="VARCHAR" property="imagePath" />
    <result column="publisher_id" jdbcType="VARCHAR" property="publisherId" />
    <result column="publish_data" jdbcType="TIMESTAMP" property="publishData" />
    <result column="school_id" jdbcType="VARCHAR" property="schoolId" />
    <result column="college_id" jdbcType="VARCHAR" property="collegeId" />
    <result column="start_time" jdbcType="TIMESTAMP" property="startTime" />
    <result column="end_time" jdbcType="TIMESTAMP" property="endTime" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="activity_area" jdbcType="VARCHAR" property="activityArea" />
    <result column="registration_closing_time" jdbcType="TIMESTAMP" property="registrationClosingTime" />
    <result column="registration_start_time" jdbcType="TIMESTAMP" property="registrationStartTime" />
    <result column="contact_phone" jdbcType="VARCHAR" property="contactPhone" />
    <result column="cost_description" jdbcType="VARCHAR" property="costDescription" />
    <result column="cost" jdbcType="VARCHAR" property="cost" />
    <result column="college_list" jdbcType="VARCHAR" property="collegeList" />
    <result column="people_num" jdbcType="INTEGER" property="peopleNum" />
    <result column="activity_class" jdbcType="INTEGER" property="activityClass" />
    <result column="sign_num" jdbcType="INTEGER" property="signNum" />
    <result column="contact" jdbcType="VARCHAR" property="contact" />
    <result column="review_time" jdbcType="TIMESTAMP" property="reviewTime" />
  </resultMap>

  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, activity_id, student_id, characters
  </sql>
  <select id="selectByExample" parameterType="com.xiaoyuanpe.pojo.ActivityStudExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from activity_stud
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from activity_stud
    where id = #{id,jdbcType=INTEGER}
  </select>

  <select id="selectActivityByOrganizer" resultMap="BaseResultMapEntry1">
    select a.id as id,a.activity_name as activity_name,a.activity_content as activity_content,a.image_path as image_path,
    u.username as publisher_id, a.publish_data as publish_data,s.school_name as school_id,c.college_name as college_id,
    a.start_time as start_time, a.end_time as end_time,a.status as status,a.activity_area as activity_area,
    a.registration_closing_time as registration_closing_time, a.registration_start_time as registration_start_time,
    a.contact_phone as contact_phone,a.cost_description as cost_description,a.cost as cost,a.college_list as college_list,
    a.people_num as people_num,a.activity_class as activity_class,a.sign_num as sign_num, a.contact as contact,
    a.review_time as review_time
    from activity as a, school as s,college as c,user as u, activity_stud as acs
    where s.id = a.school_id and a.college_id = c.id and a.publisher_id=u.id and
    acs.student_id=#{studentId,jdbcType=INTEGER} and acs.activity_id = a.id and acs.characters='发起人'
  </select>

  <select id="selectActivityByOrganizerWithStatus" resultMap="BaseResultMapEntry1">
    select a.id as id,a.activity_name as activity_name,a.activity_content as activity_content,a.image_path as image_path,
    u.username as publisher_id, a.publish_data as publish_data,s.school_name as school_id,c.college_name as college_id,
    a.start_time as start_time, a.end_time as end_time,a.status as status,a.activity_area as activity_area,
    a.registration_closing_time as registration_closing_time, a.registration_start_time as registration_start_time,
    a.contact_phone as contact_phone,a.cost_description as cost_description,a.cost as cost,a.college_list as college_list,
    a.people_num as people_num,a.activity_class as activity_class,a.sign_num as sign_num, a.contact as contact,
    a.review_time as review_time
    from activity as a, school as s,college as c,user as u, activity_stud as acs
    where s.id = a.school_id and a.college_id = c.id and a.status=#{status,jdbcType=INTEGER} and a.publisher_id=u.id and
    acs.student_id=#{studentId,jdbcType=INTEGER} and acs.activity_id = a.id and acs.characters='发起人'
  </select>


  <select id="selectActivityByPartner" resultMap="BaseResultMapEntry">
     select a.id as id,a.activity_name as activity_name,a.activity_content as activity_content,a.image_path as image_path,
    u.username as publisher_id, a.publish_data as publish_data,s.school_name as school_id,c.college_name as college_id,
    a.start_time as start_time, a.end_time as end_time,a.status as status,a.activity_area as activity_area,
    a.registration_closing_time as registration_closing_time, a.registration_start_time as registration_start_time,
    a.contact_phone as contact_phone,a.cost_description as cost_description,a.cost as cost,a.college_list as college_list,
    a.people_num as people_num,a.activity_class as activity_class,a.sign_num as sign_num, a.contact as contact,
    a.review_time as review_time
    from activity as a, school as s,college as c,user as u, activity_stud as acs
    where s.id = a.school_id and a.college_id = c.id and a.publisher_id=u.id and
    acs.student_id=#{studentId,jdbcType=INTEGER} and acs.activity_id = a.id and acs.characters='参与者'
  </select>

  <select id="selectActivityBySignin" resultMap="BaseResultMapEntry">
     select a.id as id,a.activity_name as activity_name,a.activity_content as activity_content,a.image_path as image_path,
    u.username as publisher_id, a.publish_data as publish_data,s.school_name as school_id,c.college_name as college_id,
    a.start_time as start_time, a.end_time as end_time,a.status as status,a.activity_area as activity_area,
    a.registration_closing_time as registration_closing_time, a.registration_start_time as registration_start_time,
    a.contact_phone as contact_phone,a.cost_description as cost_description,a.cost as cost,a.college_list as college_list,
    a.people_num as people_num,a.activity_class as activity_class,a.sign_num as sign_num, a.contact as contact,
    a.review_time as review_time
    from activity as a, school as s,college as c,user as u, activity_stud as acs
    where s.id = a.school_id and a.college_id = c.id and a.publisher_id=u.id and
    acs.student_id=#{studentId,jdbcType=INTEGER} and acs.activity_id = a.id and acs.characters='签到员'
  </select>

  <select id="selectPartnerByActivity" resultMap="BaseResultMapEntry">
    select acs.id as id, a.activity_name as activity_id, s.student_name as student_id, acs.characters as characters,
    a.status as status, s.student_number as student_number, s.id as student_id_num, si.flag as sign_status, si.id as sign_id
    from activity as a, activity_stud as acs, student as s, signin as si
    where acs.activity_id=#{acticityId,jdbcType=INTEGER} and acs.student_id=s.id and acs.activity_id = a.id
    and acs.characters='参与者' and si.student_id=acs.student_id and acs.activity_id = si.activity_id
  </select>

  <select id="selectByAidAndSid" resultMap="BaseResultMap">
    select from activity_stud
    where activity_id = #{activityId,jdbcType=INTEGER} and student_id = #{studentId,jdbcType=INTEGER}
  </select>

  <select id="selectByAid" resultMap="BaseResultMap">
    select from activity_stud
    where activity_id = #{activityId,jdbcType=INTEGER}
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from activity_stud
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.xiaoyuanpe.pojo.ActivityStudExample">
    delete from activity_stud
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.xiaoyuanpe.pojo.ActivityStud">
    insert into activity_stud (id, activity_id, student_id, 
      characters)
    values (#{id,jdbcType=INTEGER}, #{activityId,jdbcType=INTEGER}, #{studentId,jdbcType=INTEGER}, 
      #{characters,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.xiaoyuanpe.pojo.ActivityStud">
    insert into activity_stud
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="activityId != null">
        activity_id,
      </if>
      <if test="studentId != null">
        student_id,
      </if>
      <if test="characters != null">
        characters,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="activityId != null">
        #{activityId,jdbcType=INTEGER},
      </if>
      <if test="studentId != null">
        #{studentId,jdbcType=INTEGER},
      </if>
      <if test="characters != null">
        #{characters,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xiaoyuanpe.pojo.ActivityStudExample" resultType="java.lang.Long">
    select count(*) from activity_stud
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update activity_stud
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.activityId != null">
        activity_id = #{record.activityId,jdbcType=INTEGER},
      </if>
      <if test="record.studentId != null">
        student_id = #{record.studentId,jdbcType=INTEGER},
      </if>
      <if test="record.characters != null">
        characters = #{record.characters,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update activity_stud
    set id = #{record.id,jdbcType=INTEGER},
      activity_id = #{record.activityId,jdbcType=INTEGER},
      student_id = #{record.studentId,jdbcType=INTEGER},
      characters = #{record.characters,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.xiaoyuanpe.pojo.ActivityStud">
    update activity_stud
    <set>
      <if test="activityId != null">
        activity_id = #{activityId,jdbcType=INTEGER},
      </if>
      <if test="studentId != null">
        student_id = #{studentId,jdbcType=INTEGER},
      </if>
      <if test="characters != null">
        characters = #{characters,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xiaoyuanpe.pojo.ActivityStud">
    update activity_stud
    set activity_id = #{activityId,jdbcType=INTEGER},
      student_id = #{studentId,jdbcType=INTEGER},
      characters = #{characters,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>